map $http_x_forwarded_proto $the_scheme {
     default $http_x_forwarded_proto;
     "" $scheme;
}

map $http_x_forwarded_host $the_host {
    default $http_x_forwarded_host;
    "" $host;
}

map $http_upgrade $proxy_connection {
  default upgrade;
  "" close;
}

proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
# proxy_set_header Host $host;
proxy_set_header X-Forwarded-Host $the_host;
proxy_set_header X-Forwarded-Proto $the_scheme;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

server {

  listen 0.0.0.0:{{nginx_port}};
  listen [::]:{{nginx_port}} default_server;

{% if nginx_ssl %}
   root /nowhere; ## root doesn't have to be a valid path since we are redirecting
   rewrite ^ https://$host$request_uri? permanent;

}
server {
  listen 0.0.0.0:{{nginx_ssl_port}};
  listen [::]:{{nginx_ssl_port}} default_server;

  ssl on;
  ssl_certificate {{ nginx_ssl_certificate }};
  ssl_certificate_key {{ nginx_ssl_certificate_key }};

{% endif %}

 server_tokens off;

 include {{ nginx_includes_path }}/parity-*.conf;
} 

server {
 listen {{ ansible_host }}:{{ parity_dapps_entries.port }};


 location / {
   proxy_pass http://127.0.0.1:{{ parity_dapps_entries.port }};
 }
}

server {
 listen {{ ansible_host }}:{{ parity_ui_entries.port }};

 location / {
   proxy_pass http://127.0.0.1:{{ parity_ui_entries.port }};

   proxy_http_version 1.1;
   proxy_set_header Upgrade $http_upgrade;
   proxy_set_header Connection "upgrade";
   proxy_read_timeout 86400;
 }
} 